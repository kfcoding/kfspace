{"version":3,"sources":["ScenarioItem.js","Course.js","CodeBlock.js","Step.js","Term.js","Scenario.js","CourseContainer.js","App.js","serviceWorker.js","store/Step.js","store/Terminal.js","store/Scenario.js","store/Course.js","store/index.js","index.js"],"names":["ScenarioItem","state","title","description","scenario","this","props","react_default","a","createElement","list_default","Item","Meta","button_default","type","Link","to","encodeURIComponent","sdir","Component","Course","inject","author","scenarios","course","store","setCurrentScenario","setPage","_this2","className","style","padding","row_default","gutter","col_default","span","map","key","onClick","goto","card_default","length","progress_default","percent","observer","Lowlight","registerLanguage","js","CodeBlock","nextProps","nextState","shallowCompare","Lowlight_default","language","value","inline","React","Step","source","react_markdown_default","step","text","renderers","inlineCode","code","Xterm","applyAddon","fit","Term","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","resize","dom","createRef","currentScenario","terminals","terminal","open","ref","width","height","Scenario","Modal","info","content","onOk","display","flexDirection","background","flexShrink","icon_default","theme","fontSize","lineHeight","cursor","flexGrow","overflow","position","index_esm","split","minSize","defaultSize","textAlign","color","steps","src_Step","stepIndex","Group","prevStep","nextStep","src_Term","borderTop","paddingTop","steps_default","current","progressDot","dot","_ref","status","index","popover_default","initial","CourseContainer","fetchCourse","decodeURIComponent","match","params","repo","then","setLoading","page","src_Course","src_Scenario","App","react_loading_screen_dist_default","loading","bgColor","spinnerColor","textColor","logoSrc","BrowserRouter","Route","path","component","Boolean","window","location","hostname","types","model","dir","volatile","self","textDir","actions","afterCreate","setDir","setTitle","setDescription","desc","setTextDir","fetchText","flow","regenerator_default","mark","_callee","data","wrap","_context","prev","next","getRoot","pfs","readFile","getParent","sent","toString","stop","Terminal","name","views","socket","exc","excInput","array","alert","emit","id","input","on","ev","host","cols","rows","beforeDestroy","identifier","stepDirs","io","connect","transports","timeout","reconnection","query","rawResponse","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","dockerImage","json","console","log","push","write","setStepDirs","dirs","setTerminal","t","fetchSteps","_callee2","i","config","_context2","t0","keys","t1","done","parse","create","t2","error","scenarioDirs","setAuthor","addScenario","setScenarioDirs","fetchScenarios","Promise","all","asyncToGenerator","s","_x","apply","arguments","git","require","Store","optional","hasCurrentScenario","maybe","reference","currentStep","bfs","setBfs","setPfs","setRepo","flag","setStepIndex","fetchGit","plugins","set","clone","corsProxy","url","singleBranch","depth","browserfs","pify","moment","locale","onSnapshot","snapshot","configure","fs","options","err","BFSRequire","ReactDOM","render","index_module","locale_provider","zh_CN","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.305a5420.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport List from \"antd/lib/list\";\nimport Button from \"antd/lib/button\";\nimport {Link} from \"react-router-dom\";\nimport {inject} from 'mobx-react';\n\nclass ScenarioItem extends Component {\n\n  state = {\n    title: '',\n    description: ''\n  }\n\n  render() {\n    let scenario = this.props.scenario;\n    return (\n      <List.Item>\n        <List.Item.Meta\n          title={scenario.title}\n          description={scenario.description}\n        />\n        <div><Button type='primary'><Link to={'/scenarios/' + encodeURIComponent(this.props.sdir)}>开始实训</Link></Button></div>\n      </List.Item>\n    )\n  }\n}\n\nexport default inject('store')(ScenarioItem);\n","import React, {Component} from 'react';\nimport Row from \"antd/lib/row\";\nimport Col from \"antd/lib/col\";\nimport List from \"antd/lib/list\";\nimport Button from \"antd/lib/button\";\nimport Card from \"antd/lib/card\";\nimport Progress from \"antd/lib/progress\";\nimport {BrowserRouter as Router, Route, Link} from \"react-router-dom\";\nimport ScenarioItem from \"./ScenarioItem\";\nimport {inject, observer} from 'mobx-react';\n\nclass Course extends Component {\n\n  state = {\n    title: \"\",\n    author: \"\",\n    description: \"\",\n    scenarios: [],\n    course: {}\n  }\n\n  componentDidMount() {\n    // this.props.store.fetchGit(decodeURIComponent(this.props.match.params.repo)).then(() => {\n    //   this.props.store.fetchCourse();\n    // }).then()\n  }\n\n  goto(scenario) {\n    this.props.store.setCurrentScenario(scenario);\n    this.props.store.setPage('scenario');\n  }\n\n  render() {\n    let course = this.props.store.course;\n    return (\n      <div className=\"App\">\n        <div className='banner'>\n          <h1>{course.title}</h1>\n          <h2>作者: {course.author}</h2>\n          <h3>{course.description}</h3>\n        </div>\n        <div style={{padding: '40px 40px'}}>\n          <Row gutter={24}>\n            <Col span={18}>\n              <List>\n                {course.scenarios.map((scenario) => (\n                  <List.Item key={scenario}>\n                    <List.Item.Meta\n                      title={scenario.title}\n                      description={scenario.description}\n                    />\n                    <div><Button type='primary' onClick={() => {this.goto(scenario)}}>开始实训</Button>\n                    </div>\n                  </List.Item>\n                ))}\n              </List>\n\n            </Col>\n            <Col span={6}>\n              <Card\n                title=\"课程信息\"\n              >\n                <div>实训数量：{course.scenarios.length}</div>\n                完成情况：\n                <Progress type=\"circle\" percent={0}/>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default inject('store')(observer(Course));\n","import React from 'react';\nimport Lowlight from 'react-lowlight';\nimport shallowCompare from 'react-addons-shallow-compare';\nimport js from 'highlight.js/lib/languages/javascript';\nimport 'highlight.js/styles/vs2015.css';\n\nLowlight.registerLanguage('js', js);\n\nclass CodeBlock extends React.Component {\n  // propTypes: {\n  //   literal: React.PropTypes.string,\n  //   language: React.PropTypes.string,\n  //   inline: React.PropTypes.bool\n  // },\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return shallowCompare(this, nextProps, nextState);\n  }\n\n  render() {\n    return (\n      <Lowlight\n        language={this.props.language || 'js'}\n        value={this.props.value}\n        inline={this.props.inline}\n      />\n    );\n  }\n};\n\nexport default CodeBlock;\n","import React, {Component} from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport CodeBlock from './CodeBlock';\nimport {inject, observer} from 'mobx-react';\n\nclass Step extends Component {\n\n  state = {\n    source: '123'\n  }\n\n  render() {\n    return (\n      <div>\n        <ReactMarkdown source={this.props.step.text} renderers={{inlineCode: CodeBlock, code: CodeBlock}}/>\n      </div>\n    )\n  }\n}\n\nexport default inject('store')(observer(Step));\n","import React from 'react';\nimport { measure } from '@pinyin/measure';\nimport {inject} from 'mobx-react';\nimport 'xterm/dist/xterm.css';\nimport {Terminal as Xterm} from 'xterm';\nimport * as fit from \"xterm/lib/addons/fit/fit\";\nXterm.applyAddon(fit);\n// const Div = measure('div');\n\nclass Term extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dom = React.createRef();\n  }\n\n  componentDidMount() {\n\n    this.props.store.currentScenario.terminals[0].terminal.open(this.dom);\n    this.props.store.currentScenario.terminals[0].terminal.fit();\n  }\n\n  resize = () => {\n    // if (this.props.terminal.terminal)\n    //   this.props.terminal.terminal.fit()\n  }\n\n  render() {\n    return (\n        <div ref={dom => this.dom = dom} style={{width: '100%', height: '100%'}}></div>\n\n    )\n  }\n}\n\nexport default inject('store')(Term);\n","import React, {Component} from 'react';\nimport Modal from 'antd/lib/modal';\nimport Step from \"./Step\";\nimport SplitPane from \"react-split-pane\";\nimport {inject, observer} from 'mobx-react';\nimport Button from 'antd/lib/button';\nimport Steps from 'antd/lib/steps';\nimport Popover from 'antd/lib/popover';\nimport Icon from 'antd/lib/icon';\nimport Term from \"./Term\";\n\n\nclass Scenario extends Component {\n\n  modal() {\n    Modal.info({\n      title: this.props.store.currentScenario.title,\n      content: (\n        <div>\n          {this.props.store.currentScenario.description}\n        </div>\n      ),\n      onOk() {\n      },\n    });\n  }\n\n  render() {\n    let scenario = this.props.store.currentScenario;\n    const customDot = (dot, {status, index}) => (\n      <Popover content={<span>第{index}步: {scenario.steps[index - 1].description}</span>}>\n        {dot}\n      </Popover>\n    );\n    return (\n      // this.props.store.hasCurrentScenario &&\n      <div style={{display: 'flex', flexDirection: 'column', height: '100%'}}>\n        <div style={{height: 60, background: '#00b7ef', flexShrink: 0}}>\n          <Icon type=\"book\" theme=\"twoTone\" style={{fontSize: 40, lineHeight: '60px', cursor: 'pointer'}} onClick={() => {\n            this.props.store.setPage('')\n          }}/>\n        </div>\n        <div style={{flexGrow: 1, flexShrink: 1, overflow: 'hidden', position: 'relative'}}>\n\n          <SplitPane split=\"vertical\" minSize={50} defaultSize={480} style={{}}>\n            <div>\n              <div style={{height: 40, lineHeight: '40px', textAlign: 'center', fontSize: 24, background: '#2f7aa7', color: '#fff'}}>{scenario.title}</div>\n              <div style={{padding: 20}}>\n                {scenario.steps.length > 0 &&\n                <div>\n                  <Step step={scenario.steps[this.props.store.stepIndex]}/>\n                  <div style={{textAlign: 'right'}}>\n                    <Button.Group>\n                      {this.props.store.stepIndex != 0 &&\n                      <Button type=\"default\" onClick={() => {\n                        this.props.store.prevStep()\n                      }}>\n                        <Icon type=\"left\"/>上一步\n                      </Button>\n                      }\n                      {this.props.store.stepIndex != scenario.steps.length - 1 &&\n                      <Button type=\"primary\" onClick={() => {\n                        this.props.store.nextStep()\n                      }}>\n                        下一步<Icon type=\"right\"/>\n                      </Button>\n                      }\n                    </Button.Group>\n                  </div>\n                </div>\n                }\n              </div>\n            </div>\n            <div style={{height: '100%'}}>\n              <Term/>\n            </div>\n          </SplitPane>\n        </div>\n        <div style={{background: '#fff', flexShrink: 0, borderTop: '1px solid #ccc', paddingTop: 20}}>\n          <Steps current={this.props.store.stepIndex + 1} progressDot={customDot} initial={1}>\n            {scenario.steps.map(step => (\n              <Steps.Step key={step} title={step.title}/>\n            ))}\n          </Steps>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default inject('store')(observer(Scenario));\n","import React, {Component} from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport CodeBlock from './CodeBlock';\nimport {inject,observer} from 'mobx-react';\nimport {Route} from \"react-router-dom\";\nimport Course from \"./Course\";\nimport Scenario from \"./Scenario\";\n\nclass CourseContainer extends Component {\n\n\n  componentDidMount() {\n    this.props.store.fetchCourse(decodeURIComponent(this.props.match.params.repo)).then(() => {\n      this.props.store.setLoading(false);\n    })\n    // this.props.store.buildCourse(decodeURIComponent(this.props.match.params.repo));\n    // this.props.store.fetchGit(decodeURIComponent(this.props.match.params.repo)).then(() => {\n    //   return this.props.store.fetchCourse()\n    // }).then(() => {\n    //   return this.props.store.course.fetchScenarios()\n    // }).then(() => {\n    //   Promise.all(this.props.store.course.scenarios.map(async s => {\n    //     await s.fetchSteps();\n    //   }))\n    //\n    //   this.props.store.setLoading(false);\n    // });\n  }\n\n  render() {\n    return (\n      <div style={{height: '100%'}}>\n        {this.props.store.page == '' ?\n          <Course/>\n          :\n          <Scenario/>\n        }\n        {/*<Route exact path='/courses/:repo' component={Course}/>*/}\n        {/*<Route path='/courses/:repo/scenarios/:scenarioDir' component={Scenario}/>*/}\n      </div>\n    )\n  }\n}\n\nexport default inject('store')(observer(CourseContainer));\n","import React, {Component} from 'react';\nimport {BrowserRouter as Router, Route, Link} from \"react-router-dom\";\nimport './App.css';\nimport Course from \"./Course\";\nimport Scenario from \"./Scenario\";\nimport Step from \"./Step\";\nimport CourseContainer from \"./CourseContainer\";\nimport LoadingScreen from 'react-loading-screen';\nimport {inject, observer} from 'mobx-react';\n\nclass App extends Component {\n\n  componentDidMount() {\n    // this.props.store.fetchCourse()\n  }\n\n  render() {\n    return (\n      <LoadingScreen\n        loading={this.props.store.loading}\n        bgColor='#39a189'\n        spinnerColor='#9ee5f8'\n        textColor='#fff'\n        logoSrc='/giphy.gif'\n        text='Loading...'\n        style={{height: '100%'}}\n      >\n      <Router>\n        <div style={{height: '100%'}}>\n          <Route path='/kfspace/:repo' component={CourseContainer}/>\n          {/*<Route exact path=\"/repo/:repo\" component={Course}/>*/}\n          {/*<Route path=\"/scenarios/:index\" component={Scenario}/>*/}\n        </div>\n      </Router>\n      </LoadingScreen>\n    );\n  }\n}\n\nexport default inject('store')(observer(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {types, flow, getRoot, getParent} from 'mobx-state-tree';\n\nexport const Step = types\n  .model('Step', {\n    dir: '',\n    title: '',\n    description: '',\n    text: ''\n  }).volatile(self => ({\n    textDir: ''\n  })).actions(self => {\n    const fetchText = flow(function* () {\n      let data = yield getRoot(self).pfs.readFile(getParent(getParent(self)).dir + '/' + self.dir + '/' + self.textDir);\n      self.text = data.toString();\n    })\n    return {\n      afterCreate() {\n      },\n      setDir(dir) {\n        self.dir = dir;\n      },\n      setTitle(title) {\n        self.title = title;\n      },\n      setDescription(desc) {\n        self.description = desc;\n      },\n      setTextDir(dir) {\n        self.textDir = dir;\n      },\n      fetchText\n    }\n  });\n","import {types, flow, getRoot, getParent} from 'mobx-state-tree';\nimport {Step} from \"./Step\";\nimport {Terminal as Xterm} from 'xterm';\nimport io from 'socket.io-client';\nimport * as fit from \"xterm/lib/addons/fit/fit\";\n\nXterm.applyAddon(fit);\n\nexport const Terminal = types\n  .model('Terminal', {\n    // id: types.identifier(),\n    name: 'tt',\n  }).volatile(self => ({\n    terminal: {}\n  })).views(self => ({\n    get store() {\n      return getRoot(self)\n    }\n  })).actions(self => {\n    let terminal = null;\n    let socket = null\n\n    function afterCreate() {\n      socket = getParent(self, 2).socket;\n      terminal = new Xterm({\n        fontSize: 16\n      });\n      self.terminal = terminal;\n      // socket.emit('term.open', {id: self.id, cols: terminal.cols, rows: terminal.rows, cwd: WORKSPACE_DIR});\n      terminal.on('key', (key, ev) => {\n        socket.emit('data', {host: 'HOST1', data: key});\n      });\n      terminal.on('resize', ({cols, rows}) => {\n        socket.emit('terminal-resize', {cols: cols, rows: rows})\n      })\n    }\n\n    function beforeDestroy() {\n      socket.emit('term.close', {id: self.id})\n    }\n\n    function exc(path) {\n      // var excInput = 'g++ main.cpp -o main && ./main\\n'\n      var excInput;\n      var array = path.split('.');\n      if (array[array.length - 1] === 'cpp') {\n        excInput = 'g++ ' + path + ' -o /tmp/out.o && /tmp/out.o\\n';\n      } else if (array[array.length - 1] === 'py') {\n        excInput = 'python ' + path + '\\n';\n      } else {\n        alert(\"不是合法文件\");\n      }\n      socket.emit('term.input', {id: self.id, input: excInput})\n    }\n\n    return {\n      exc,\n      afterCreate,\n      beforeDestroy\n    }\n  });\n","import {types, flow, getRoot} from 'mobx-state-tree';\nimport {Step} from \"./Step\";\nimport io from 'socket.io-client';\nimport {Terminal} from \"./Terminal\";\n\nexport const Scenario = types\n  .model('Scenario', {\n    dir: types.identifier,\n    title: '',\n    description: '',\n    steps: types.array(Step),\n    terminals: types.array(Terminal)\n  }).volatile(self => ({\n    stepDirs: [],\n    socket: io.connect('//ws.katacoda.com', {\n      transports: [\"websocket\"],\n      timeout: 120 * 1e3,\n      reconnection: false,\n      query: 'dockerimage=dind&course=docker&id=deploying-first-container&originalPathwayId='\n    })\n  })).actions(self => {\n    const createTerminal = flow(function* () {\n      const rawResponse = yield fetch('http://api.kfcoding.com/api/basic/workspaces', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({dockerImage: 'registry-vpc.cn-shanghai.aliyuncs.com/kfcoding/workspace-envs:ubuntu', type: 'terminal'})\n      });\n      const content = yield rawResponse.json();\n      console.log(content)\n    })\n\n    const fetchSteps = flow(function* () {\n      for (let i in self.stepDirs) {\n        try {\n          let dir = self.stepDirs[i];\n          let data = yield getRoot(self).pfs.readFile(self.dir + '/' + dir + '/config.json');\n          let config = JSON.parse(data.toString());\n          let step = Step.create({\n            dir: dir,\n            title: config.title,\n            description: config.description\n          });\n          step.setTextDir(config.text);\n          self.steps.push(step)\n          yield step.fetchText();\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    });\n\n    return {\n      afterCreate() {\n        self.terminals.push({})\n\n        self.socket.on('data', function (data) {console.log(data)\n          self.terminals[0].terminal.write(data.data)\n        });\n      },\n      setDir(dir) {\n        self.dir = dir;\n      },\n      setTitle(title) {\n        self.title = title;\n      },\n      setDescription(desc) {\n        self.description = desc;\n      },\n      setStepDirs(dirs) {\n        self.stepDirs = dirs;\n      },\n      setTerminal(t) {\n        self.terminal = t;\n      },\n      fetchSteps\n    }\n  });\n","import {types, flow, getRoot, getSnapshot} from 'mobx-state-tree';\nimport {Scenario} from \"./Scenario\";\nimport {Terminal} from \"./Terminal\";\n\nexport const Course = types\n  .model('Course', {\n    title: '',\n    description: '',\n    author: '',\n    scenarios: types.array(Scenario)\n  }).volatile(self => ({\n    scenarioDirs: []\n  })).actions(self => {\n    const fetchScenarios = flow(function* () {\n      self.scenarios = [];\n      for (let i in self.scenarioDirs) {\n        try {\n          let dir = self.scenarioDirs[i];\n          let data = yield getRoot(self).pfs.readFile(dir + '/config.json');\n          let config = JSON.parse(data.toString());\n          let scenario = Scenario.create({\n            dir: dir,\n            title: config.title,\n            description: config.description,\n          });\n          scenario.setStepDirs(config.steps);\n          self.scenarios.push(scenario);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n\n      Promise.all(self.scenarios.map(async s => {\n        await s.fetchSteps();\n      }))\n    })\n    return {\n      afterCreate() {\n      },\n      setTitle(title) {\n        self.title = title;\n      },\n      setDescription(desc) {\n        self.description = desc;\n      },\n      setAuthor(author) {\n        self.author = author;\n      },\n      addScenario(scenario) {\n        self.scenarios.push(scenario);\n      },\n      setScenarioDirs(dirs) {\n        self.scenarioDirs = dirs;\n      },\n      fetchScenarios\n    }\n  });\n","import {types, flow, getRoot} from 'mobx-state-tree';\nimport {Course} from './Course';\nimport {Scenario} from \"./Scenario\";\nimport {Step} from \"./Step\";\n\nconst git = require('isomorphic-git');\n\nexport const Store = types.model('Store', {\n  loading: true,\n  repo: 'https://github.com/kfcoding/kfcoding-cource-example.git',\n  course: types.optional(Course, {}),\n  hasCurrentScenario: false,\n  currentScenario: types.maybe(types.reference(Scenario)),\n  stepIndex: 0,\n  currentStep: types.maybe(types.reference(Step)),\n  page: ''\n}).volatile(self => ({\n  bfs: null,\n  pfs: null,\n})).actions(self => {\n  const fetchGit = flow(function* (repo) {\n    git.plugins.set('fs', self.bfs);\n    yield git.clone({\n      dir: '.',\n      corsProxy: 'https://cors.isomorphic-git.org',\n      url: repo,\n      singleBranch: true,\n      depth: 1\n    })\n  })\n  const fetchCourse = flow(function* (repo) {\n    git.plugins.set('fs', self.bfs);\n    yield git.clone({\n      dir: '.',\n      corsProxy: 'https://cors.isomorphic-git.org',\n      url: repo,\n      singleBranch: true,\n      depth: 1\n    })\n    let data = yield self.pfs.readFile('config.json');\n    let config = JSON.parse(data.toString());\n\n    self.course.setTitle(config.title);\n    self.course.setDescription(config.description);\n    self.course.setAuthor(config.author);\n    self.course.setScenarioDirs(config.scenarios);\n    yield self.course.fetchScenarios();\n\n  })\n  return ({\n    setBfs(bfs) {\n      self.bfs = bfs;\n    },\n    setPfs(pfs) {\n      self.pfs = pfs;\n    },\n    setRepo(repo) {\n      self.repo = repo;\n    },\n    setCurrentScenario(scenario) {\n      self.currentScenario = scenario;\n      // self.course.scenarios.map(s => {console.log(dir)\n      //   if (s.dir == dir) {\n      //     self.currentScenario = s;\n      //     self.hasCurrentScenario = true;\n      //   }\n      // })\n    },\n    setLoading(flag) {\n      self.loading = flag;\n    },\n    setStepIndex(index) {\n      self.stepIndex = index;\n    },\n    setPage(page) {\n      self.page = page;\n    },\n    nextStep() {\n      self.stepIndex++;\n    },\n    prevStep() {\n      self.stepIndex--;\n    },\n    fetchGit,\n    fetchCourse\n  })\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'mobx-react';\nimport {Store} from './store/index';\nimport {LocaleProvider} from 'antd';\nimport zh_CN from 'antd/lib/locale-provider/zh_CN';\nimport moment from 'moment';\nimport 'moment/locale/zh-cn';\nimport { onSnapshot } from 'mobx-state-tree';\n\nconst browserfs = require('browserfs');\nconst pify = require('pify');\nconst git = require('isomorphic-git');\n\nmoment.locale('zh-cn');\nconst store = Store.create();\n\nonSnapshot(store, (snapshot) => {\n  console.dir(JSON.stringify(snapshot))\n})\n\nbrowserfs.configure({fs: \"IndexedDB\", options: {}}, (err) => {\n  if (err) return console.log(err);\n  let bfs = browserfs.BFSRequire(\"fs\");\n  let pfs = pify(bfs);\n  store.setBfs(bfs);\n  store.setPfs(pfs);\n\n  ReactDOM.render(<Provider store={store}><LocaleProvider\n    locale={zh_CN}><App/></LocaleProvider></Provider>, document.getElementById('root'));\n});\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}